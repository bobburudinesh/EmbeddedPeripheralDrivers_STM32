
stm32f4xx_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006ec  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000874  0800087c  0000187c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000874  08000874  0000187c  2**0
                  CONTENTS
  4 .ARM          00000000  08000874  08000874  0000187c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000874  0800087c  0000187c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000874  08000874  00001874  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000878  08000878  00001878  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000187c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000187c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000187c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009e0  00000000  00000000  000018ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000026c  00000000  00000000  0000228c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  000024f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000085  00000000  00000000  000025b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000164c  00000000  00000000  0000263d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000f32  00000000  00000000  00003c89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005c34  00000000  00000000  00004bbb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000a7ef  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000024c  00000000  00000000  0000a834  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000008c  00000000  00000000  0000aa80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800085c 	.word	0x0800085c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	0800085c 	.word	0x0800085c

080001c8 <delay>:


#include <stm32f407xx.h>
#include <stm32f407xx_gpio_driver.h>

void delay(void) {
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for(volatile uint32_t i = 0; i<500000/2;i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a04      	ldr	r2, [pc, #16]	@ (80001f0 <delay+0x28>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <delay+0xc>
}
 80001e2:	bf00      	nop
 80001e4:	bf00      	nop
 80001e6:	370c      	adds	r7, #12
 80001e8:	46bd      	mov	sp, r7
 80001ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001ee:	4770      	bx	lr
 80001f0:	0003d08f 	.word	0x0003d08f

080001f4 <main>:

int main(void) {
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b086      	sub	sp, #24
 80001f8:	af00      	add	r7, sp, #0

	GPIO_Handle_t gpioSw, gpioLED;
	gpioSw.pGPIOx = GPIOA;
 80001fa:	4b1a      	ldr	r3, [pc, #104]	@ (8000264 <main+0x70>)
 80001fc:	60fb      	str	r3, [r7, #12]
	gpioSw.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 80001fe:	2300      	movs	r3, #0
 8000200:	743b      	strb	r3, [r7, #16]
	gpioSw.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000202:	2300      	movs	r3, #0
 8000204:	747b      	strb	r3, [r7, #17]
	gpioSw.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000206:	2302      	movs	r3, #2
 8000208:	74bb      	strb	r3, [r7, #18]
	gpioSw.GPIO_PinConfig.GPIO_PinpupdControl = GPIO_NO_PUPD;
 800020a:	2300      	movs	r3, #0
 800020c:	74fb      	strb	r3, [r7, #19]
	//gpioSw.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
	//gpioSw.GPIO_PinConfig.GPIO_PinAltFunMode = 	GPIO_MODE_IN;


	gpioLED.pGPIOx = GPIOD;
 800020e:	4b16      	ldr	r3, [pc, #88]	@ (8000268 <main+0x74>)
 8000210:	603b      	str	r3, [r7, #0]
	gpioLED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000212:	230c      	movs	r3, #12
 8000214:	713b      	strb	r3, [r7, #4]
	gpioLED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000216:	2301      	movs	r3, #1
 8000218:	717b      	strb	r3, [r7, #5]
	gpioLED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800021a:	2302      	movs	r3, #2
 800021c:	71bb      	strb	r3, [r7, #6]
	gpioLED.GPIO_PinConfig.GPIO_PinpupdControl = GPIO_NO_PUPD;
 800021e:	2300      	movs	r3, #0
 8000220:	71fb      	strb	r3, [r7, #7]
	gpioLED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000222:	2300      	movs	r3, #0
 8000224:	723b      	strb	r3, [r7, #8]
	//gpioLED.GPIO_PinConfig.GPIO_PinAltFunMode = 	GPIO_MODE_IN;
	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000226:	2101      	movs	r1, #1
 8000228:	480e      	ldr	r0, [pc, #56]	@ (8000264 <main+0x70>)
 800022a:	f000 f849 	bl	80002c0 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOD, ENABLE);
 800022e:	2101      	movs	r1, #1
 8000230:	480d      	ldr	r0, [pc, #52]	@ (8000268 <main+0x74>)
 8000232:	f000 f845 	bl	80002c0 <GPIO_PeriClockControl>

	GPIO_Init(&gpioLED);
 8000236:	463b      	mov	r3, r7
 8000238:	4618      	mov	r0, r3
 800023a:	f000 f929 	bl	8000490 <GPIO_Init>
	GPIO_Init(&gpioSw);
 800023e:	f107 030c 	add.w	r3, r7, #12
 8000242:	4618      	mov	r0, r3
 8000244:	f000 f924 	bl	8000490 <GPIO_Init>

	while(1) {
		delay();
 8000248:	f7ff ffbe 	bl	80001c8 <delay>
		if (GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0)) {
 800024c:	2100      	movs	r1, #0
 800024e:	4805      	ldr	r0, [pc, #20]	@ (8000264 <main+0x70>)
 8000250:	f000 fab4 	bl	80007bc <GPIO_ReadFromInputPin>
 8000254:	4603      	mov	r3, r0
 8000256:	2b00      	cmp	r3, #0
 8000258:	d0f6      	beq.n	8000248 <main+0x54>
			GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 800025a:	210c      	movs	r1, #12
 800025c:	4802      	ldr	r0, [pc, #8]	@ (8000268 <main+0x74>)
 800025e:	f000 fac3 	bl	80007e8 <GPIO_ToggleOutputPin>
		delay();
 8000262:	e7f1      	b.n	8000248 <main+0x54>
 8000264:	40020000 	.word	0x40020000
 8000268:	40020c00 	.word	0x40020c00

0800026c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800026c:	480d      	ldr	r0, [pc, #52]	@ (80002a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000270:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000274:	480c      	ldr	r0, [pc, #48]	@ (80002a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000276:	490d      	ldr	r1, [pc, #52]	@ (80002ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000278:	4a0d      	ldr	r2, [pc, #52]	@ (80002b0 <LoopForever+0xe>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800027c:	e002      	b.n	8000284 <LoopCopyDataInit>

0800027e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000280:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000282:	3304      	adds	r3, #4

08000284 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000284:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000286:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000288:	d3f9      	bcc.n	800027e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028a:	4a0a      	ldr	r2, [pc, #40]	@ (80002b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800028c:	4c0a      	ldr	r4, [pc, #40]	@ (80002b8 <LoopForever+0x16>)
  movs r3, #0
 800028e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000290:	e001      	b.n	8000296 <LoopFillZerobss>

08000292 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000292:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000294:	3204      	adds	r2, #4

08000296 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000296:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000298:	d3fb      	bcc.n	8000292 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029a:	f000 fabb 	bl	8000814 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029e:	f7ff ffa9 	bl	80001f4 <main>

080002a2 <LoopForever>:

LoopForever:
  b LoopForever
 80002a2:	e7fe      	b.n	80002a2 <LoopForever>
  ldr   r0, =_estack
 80002a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ac:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b0:	0800087c 	.word	0x0800087c
  ldr r2, =_sbss
 80002b4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b8:	2000001c 	.word	0x2000001c

080002bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002bc:	e7fe      	b.n	80002bc <ADC_IRQHandler>
	...

080002c0 <GPIO_PeriClockControl>:

/*
 * Peripheral Clock setup
 * */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi) {
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	6078      	str	r0, [r7, #4]
 80002c8:	460b      	mov	r3, r1
 80002ca:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE) {
 80002cc:	78fb      	ldrb	r3, [r7, #3]
 80002ce:	2b01      	cmp	r3, #1
 80002d0:	d162      	bne.n	8000398 <GPIO_PeriClockControl+0xd8>
		if (pGPIOx == GPIOA) {
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a64      	ldr	r2, [pc, #400]	@ (8000468 <GPIO_PeriClockControl+0x1a8>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d106      	bne.n	80002e8 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80002da:	4b64      	ldr	r3, [pc, #400]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80002dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002de:	4a63      	ldr	r2, [pc, #396]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6313      	str	r3, [r2, #48]	@ 0x30
					GPIOH_PCLK_DI();
				}else if (pGPIOx == GPIOI) {
					GPIOI_PCLK_DI();
				}
	}
}
 80002e6:	e0b9      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a61      	ldr	r2, [pc, #388]	@ (8000470 <GPIO_PeriClockControl+0x1b0>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d106      	bne.n	80002fe <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002f0:	4b5e      	ldr	r3, [pc, #376]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002f4:	4a5d      	ldr	r2, [pc, #372]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80002f6:	f043 0302 	orr.w	r3, r3, #2
 80002fa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002fc:	e0ae      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC) {
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a5c      	ldr	r2, [pc, #368]	@ (8000474 <GPIO_PeriClockControl+0x1b4>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000306:	4b59      	ldr	r3, [pc, #356]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800030a:	4a58      	ldr	r2, [pc, #352]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800030c:	f043 0304 	orr.w	r3, r3, #4
 8000310:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000312:	e0a3      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD) {
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a58      	ldr	r2, [pc, #352]	@ (8000478 <GPIO_PeriClockControl+0x1b8>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800031c:	4b53      	ldr	r3, [pc, #332]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000320:	4a52      	ldr	r2, [pc, #328]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000322:	f043 0308 	orr.w	r3, r3, #8
 8000326:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000328:	e098      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE) {
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a53      	ldr	r2, [pc, #332]	@ (800047c <GPIO_PeriClockControl+0x1bc>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000332:	4b4e      	ldr	r3, [pc, #312]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000336:	4a4d      	ldr	r2, [pc, #308]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000338:	f043 0310 	orr.w	r3, r3, #16
 800033c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800033e:	e08d      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF) {
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a4f      	ldr	r2, [pc, #316]	@ (8000480 <GPIO_PeriClockControl+0x1c0>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000348:	4b48      	ldr	r3, [pc, #288]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800034c:	4a47      	ldr	r2, [pc, #284]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800034e:	f043 0320 	orr.w	r3, r3, #32
 8000352:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000354:	e082      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG) {
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a4a      	ldr	r2, [pc, #296]	@ (8000484 <GPIO_PeriClockControl+0x1c4>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800035e:	4b43      	ldr	r3, [pc, #268]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000362:	4a42      	ldr	r2, [pc, #264]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000364:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000368:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800036a:	e077      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH) {
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a46      	ldr	r2, [pc, #280]	@ (8000488 <GPIO_PeriClockControl+0x1c8>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000374:	4b3d      	ldr	r3, [pc, #244]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000378:	4a3c      	ldr	r2, [pc, #240]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800037a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800037e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000380:	e06c      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI) {
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a41      	ldr	r2, [pc, #260]	@ (800048c <GPIO_PeriClockControl+0x1cc>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d168      	bne.n	800045c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800038a:	4b38      	ldr	r3, [pc, #224]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800038e:	4a37      	ldr	r2, [pc, #220]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000390:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000394:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000396:	e061      	b.n	800045c <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA) {
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a33      	ldr	r2, [pc, #204]	@ (8000468 <GPIO_PeriClockControl+0x1a8>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_PeriClockControl+0xee>
					GPIOA_PCLK_DI();
 80003a0:	4b32      	ldr	r3, [pc, #200]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003a4:	4a31      	ldr	r2, [pc, #196]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003a6:	f023 0301 	bic.w	r3, r3, #1
 80003aa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ac:	e056      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				} else if (pGPIOx == GPIOB) {
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a2f      	ldr	r2, [pc, #188]	@ (8000470 <GPIO_PeriClockControl+0x1b0>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_PeriClockControl+0x104>
					GPIOB_PCLK_DI();
 80003b6:	4b2d      	ldr	r3, [pc, #180]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ba:	4a2c      	ldr	r2, [pc, #176]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003bc:	f023 0302 	bic.w	r3, r3, #2
 80003c0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003c2:	e04b      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOC) {
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a2b      	ldr	r2, [pc, #172]	@ (8000474 <GPIO_PeriClockControl+0x1b4>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_PeriClockControl+0x11a>
					GPIOC_PCLK_DI();
 80003cc:	4b27      	ldr	r3, [pc, #156]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003d0:	4a26      	ldr	r2, [pc, #152]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003d2:	f023 0304 	bic.w	r3, r3, #4
 80003d6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003d8:	e040      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOD) {
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a26      	ldr	r2, [pc, #152]	@ (8000478 <GPIO_PeriClockControl+0x1b8>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d106      	bne.n	80003f0 <GPIO_PeriClockControl+0x130>
					GPIOD_PCLK_DI();
 80003e2:	4b22      	ldr	r3, [pc, #136]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003e6:	4a21      	ldr	r2, [pc, #132]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003e8:	f023 0308 	bic.w	r3, r3, #8
 80003ec:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ee:	e035      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOE) {
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a22      	ldr	r2, [pc, #136]	@ (800047c <GPIO_PeriClockControl+0x1bc>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d106      	bne.n	8000406 <GPIO_PeriClockControl+0x146>
					GPIOE_PCLK_DI();
 80003f8:	4b1c      	ldr	r3, [pc, #112]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003fc:	4a1b      	ldr	r2, [pc, #108]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 80003fe:	f023 0310 	bic.w	r3, r3, #16
 8000402:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000404:	e02a      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOF) {
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4a1d      	ldr	r2, [pc, #116]	@ (8000480 <GPIO_PeriClockControl+0x1c0>)
 800040a:	4293      	cmp	r3, r2
 800040c:	d106      	bne.n	800041c <GPIO_PeriClockControl+0x15c>
					GPIOF_PCLK_DI();
 800040e:	4b17      	ldr	r3, [pc, #92]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000410:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000412:	4a16      	ldr	r2, [pc, #88]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000414:	f023 0320 	bic.w	r3, r3, #32
 8000418:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800041a:	e01f      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOG) {
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a19      	ldr	r2, [pc, #100]	@ (8000484 <GPIO_PeriClockControl+0x1c4>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d106      	bne.n	8000432 <GPIO_PeriClockControl+0x172>
					GPIOG_PCLK_DI();
 8000424:	4b11      	ldr	r3, [pc, #68]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000426:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000428:	4a10      	ldr	r2, [pc, #64]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800042a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800042e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000430:	e014      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOH) {
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4a14      	ldr	r2, [pc, #80]	@ (8000488 <GPIO_PeriClockControl+0x1c8>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d106      	bne.n	8000448 <GPIO_PeriClockControl+0x188>
					GPIOH_PCLK_DI();
 800043a:	4b0c      	ldr	r3, [pc, #48]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 800043c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800043e:	4a0b      	ldr	r2, [pc, #44]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000440:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000444:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000446:	e009      	b.n	800045c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOI) {
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	4a10      	ldr	r2, [pc, #64]	@ (800048c <GPIO_PeriClockControl+0x1cc>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d105      	bne.n	800045c <GPIO_PeriClockControl+0x19c>
					GPIOI_PCLK_DI();
 8000450:	4b06      	ldr	r3, [pc, #24]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000452:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000454:	4a05      	ldr	r2, [pc, #20]	@ (800046c <GPIO_PeriClockControl+0x1ac>)
 8000456:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800045a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800045c:	bf00      	nop
 800045e:	370c      	adds	r7, #12
 8000460:	46bd      	mov	sp, r7
 8000462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000466:	4770      	bx	lr
 8000468:	40020000 	.word	0x40020000
 800046c:	40023800 	.word	0x40023800
 8000470:	40020400 	.word	0x40020400
 8000474:	40020800 	.word	0x40020800
 8000478:	40020c00 	.word	0x40020c00
 800047c:	40021000 	.word	0x40021000
 8000480:	40021400 	.word	0x40021400
 8000484:	40021800 	.word	0x40021800
 8000488:	40021c00 	.word	0x40021c00
 800048c:	40022000 	.word	0x40022000

08000490 <GPIO_Init>:

/*
 * Init and DEInit
 * */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle) {
 8000490:	b480      	push	{r7}
 8000492:	b087      	sub	sp, #28
 8000494:	af00      	add	r7, sp, #0
 8000496:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; // temp register
 8000498:	2300      	movs	r3, #0
 800049a:	617b      	str	r3, [r7, #20]
	// 1. CONFIGURE MODE
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	795b      	ldrb	r3, [r3, #5]
 80004a0:	2b03      	cmp	r3, #3
 80004a2:	d81f      	bhi.n	80004e4 <GPIO_Init+0x54>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	795b      	ldrb	r3, [r3, #5]
 80004a8:	461a      	mov	r2, r3
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	791b      	ldrb	r3, [r3, #4]
 80004ae:	005b      	lsls	r3, r3, #1
 80004b0:	fa02 f303 	lsl.w	r3, r2, r3
 80004b4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	681a      	ldr	r2, [r3, #0]
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	791b      	ldrb	r3, [r3, #4]
 80004c0:	4619      	mov	r1, r3
 80004c2:	2303      	movs	r3, #3
 80004c4:	408b      	lsls	r3, r1
 80004c6:	43db      	mvns	r3, r3
 80004c8:	4619      	mov	r1, r3
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	400a      	ands	r2, r1
 80004d0:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	6819      	ldr	r1, [r3, #0]
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	697a      	ldr	r2, [r7, #20]
 80004de:	430a      	orrs	r2, r1
 80004e0:	601a      	str	r2, [r3, #0]
 80004e2:	e0c2      	b.n	800066a <GPIO_Init+0x1da>

	} else {
		// This is an interrupt
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT) {
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	795b      	ldrb	r3, [r3, #5]
 80004e8:	2b04      	cmp	r3, #4
 80004ea:	d117      	bne.n	800051c <GPIO_Init+0x8c>
			// 1. configuring falling trigger register
			EXTI->FTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ec:	4b47      	ldr	r3, [pc, #284]	@ (800060c <GPIO_Init+0x17c>)
 80004ee:	68db      	ldr	r3, [r3, #12]
 80004f0:	687a      	ldr	r2, [r7, #4]
 80004f2:	7912      	ldrb	r2, [r2, #4]
 80004f4:	4611      	mov	r1, r2
 80004f6:	2201      	movs	r2, #1
 80004f8:	408a      	lsls	r2, r1
 80004fa:	4611      	mov	r1, r2
 80004fc:	4a43      	ldr	r2, [pc, #268]	@ (800060c <GPIO_Init+0x17c>)
 80004fe:	430b      	orrs	r3, r1
 8000500:	60d3      	str	r3, [r2, #12]
			// 2. clear corresponding rtsr bit
			EXTI->RTSR &= ~(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000502:	4b42      	ldr	r3, [pc, #264]	@ (800060c <GPIO_Init+0x17c>)
 8000504:	689b      	ldr	r3, [r3, #8]
 8000506:	687a      	ldr	r2, [r7, #4]
 8000508:	7912      	ldrb	r2, [r2, #4]
 800050a:	4611      	mov	r1, r2
 800050c:	2201      	movs	r2, #1
 800050e:	408a      	lsls	r2, r1
 8000510:	43d2      	mvns	r2, r2
 8000512:	4611      	mov	r1, r2
 8000514:	4a3d      	ldr	r2, [pc, #244]	@ (800060c <GPIO_Init+0x17c>)
 8000516:	400b      	ands	r3, r1
 8000518:	6093      	str	r3, [r2, #8]
 800051a:	e035      	b.n	8000588 <GPIO_Init+0xf8>
		} else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT) {
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	795b      	ldrb	r3, [r3, #5]
 8000520:	2b05      	cmp	r3, #5
 8000522:	d117      	bne.n	8000554 <GPIO_Init+0xc4>
			// 1. Configure raising trigger register
			EXTI->RTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000524:	4b39      	ldr	r3, [pc, #228]	@ (800060c <GPIO_Init+0x17c>)
 8000526:	689b      	ldr	r3, [r3, #8]
 8000528:	687a      	ldr	r2, [r7, #4]
 800052a:	7912      	ldrb	r2, [r2, #4]
 800052c:	4611      	mov	r1, r2
 800052e:	2201      	movs	r2, #1
 8000530:	408a      	lsls	r2, r1
 8000532:	4611      	mov	r1, r2
 8000534:	4a35      	ldr	r2, [pc, #212]	@ (800060c <GPIO_Init+0x17c>)
 8000536:	430b      	orrs	r3, r1
 8000538:	6093      	str	r3, [r2, #8]
			// 2. clear corresponding ftsr bit
			EXTI->FTSR &= ~(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800053a:	4b34      	ldr	r3, [pc, #208]	@ (800060c <GPIO_Init+0x17c>)
 800053c:	68db      	ldr	r3, [r3, #12]
 800053e:	687a      	ldr	r2, [r7, #4]
 8000540:	7912      	ldrb	r2, [r2, #4]
 8000542:	4611      	mov	r1, r2
 8000544:	2201      	movs	r2, #1
 8000546:	408a      	lsls	r2, r1
 8000548:	43d2      	mvns	r2, r2
 800054a:	4611      	mov	r1, r2
 800054c:	4a2f      	ldr	r2, [pc, #188]	@ (800060c <GPIO_Init+0x17c>)
 800054e:	400b      	ands	r3, r1
 8000550:	60d3      	str	r3, [r2, #12]
 8000552:	e019      	b.n	8000588 <GPIO_Init+0xf8>
		} else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT) {
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	795b      	ldrb	r3, [r3, #5]
 8000558:	2b06      	cmp	r3, #6
 800055a:	d115      	bne.n	8000588 <GPIO_Init+0xf8>
			// 1. configure FTSR and RTSR
			EXTI->RTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800055c:	4b2b      	ldr	r3, [pc, #172]	@ (800060c <GPIO_Init+0x17c>)
 800055e:	689b      	ldr	r3, [r3, #8]
 8000560:	687a      	ldr	r2, [r7, #4]
 8000562:	7912      	ldrb	r2, [r2, #4]
 8000564:	4611      	mov	r1, r2
 8000566:	2201      	movs	r2, #1
 8000568:	408a      	lsls	r2, r1
 800056a:	4611      	mov	r1, r2
 800056c:	4a27      	ldr	r2, [pc, #156]	@ (800060c <GPIO_Init+0x17c>)
 800056e:	430b      	orrs	r3, r1
 8000570:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000572:	4b26      	ldr	r3, [pc, #152]	@ (800060c <GPIO_Init+0x17c>)
 8000574:	68db      	ldr	r3, [r3, #12]
 8000576:	687a      	ldr	r2, [r7, #4]
 8000578:	7912      	ldrb	r2, [r2, #4]
 800057a:	4611      	mov	r1, r2
 800057c:	2201      	movs	r2, #1
 800057e:	408a      	lsls	r2, r1
 8000580:	4611      	mov	r1, r2
 8000582:	4a22      	ldr	r2, [pc, #136]	@ (800060c <GPIO_Init+0x17c>)
 8000584:	430b      	orrs	r3, r1
 8000586:	60d3      	str	r3, [r2, #12]
		}

		// 2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	791b      	ldrb	r3, [r3, #4]
 800058c:	089b      	lsrs	r3, r3, #2
 800058e:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	791b      	ldrb	r3, [r3, #4]
 8000594:	f003 0303 	and.w	r3, r3, #3
 8000598:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	4a1c      	ldr	r2, [pc, #112]	@ (8000610 <GPIO_Init+0x180>)
 80005a0:	4293      	cmp	r3, r2
 80005a2:	d045      	beq.n	8000630 <GPIO_Init+0x1a0>
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	4a1a      	ldr	r2, [pc, #104]	@ (8000614 <GPIO_Init+0x184>)
 80005aa:	4293      	cmp	r3, r2
 80005ac:	d02b      	beq.n	8000606 <GPIO_Init+0x176>
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	4a19      	ldr	r2, [pc, #100]	@ (8000618 <GPIO_Init+0x188>)
 80005b4:	4293      	cmp	r3, r2
 80005b6:	d024      	beq.n	8000602 <GPIO_Init+0x172>
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	4a17      	ldr	r2, [pc, #92]	@ (800061c <GPIO_Init+0x18c>)
 80005be:	4293      	cmp	r3, r2
 80005c0:	d01d      	beq.n	80005fe <GPIO_Init+0x16e>
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	4a16      	ldr	r2, [pc, #88]	@ (8000620 <GPIO_Init+0x190>)
 80005c8:	4293      	cmp	r3, r2
 80005ca:	d016      	beq.n	80005fa <GPIO_Init+0x16a>
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	4a14      	ldr	r2, [pc, #80]	@ (8000624 <GPIO_Init+0x194>)
 80005d2:	4293      	cmp	r3, r2
 80005d4:	d00f      	beq.n	80005f6 <GPIO_Init+0x166>
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	4a13      	ldr	r2, [pc, #76]	@ (8000628 <GPIO_Init+0x198>)
 80005dc:	4293      	cmp	r3, r2
 80005de:	d008      	beq.n	80005f2 <GPIO_Init+0x162>
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	4a11      	ldr	r2, [pc, #68]	@ (800062c <GPIO_Init+0x19c>)
 80005e6:	4293      	cmp	r3, r2
 80005e8:	d101      	bne.n	80005ee <GPIO_Init+0x15e>
 80005ea:	2307      	movs	r3, #7
 80005ec:	e021      	b.n	8000632 <GPIO_Init+0x1a2>
 80005ee:	2300      	movs	r3, #0
 80005f0:	e01f      	b.n	8000632 <GPIO_Init+0x1a2>
 80005f2:	2306      	movs	r3, #6
 80005f4:	e01d      	b.n	8000632 <GPIO_Init+0x1a2>
 80005f6:	2305      	movs	r3, #5
 80005f8:	e01b      	b.n	8000632 <GPIO_Init+0x1a2>
 80005fa:	2304      	movs	r3, #4
 80005fc:	e019      	b.n	8000632 <GPIO_Init+0x1a2>
 80005fe:	2303      	movs	r3, #3
 8000600:	e017      	b.n	8000632 <GPIO_Init+0x1a2>
 8000602:	2302      	movs	r3, #2
 8000604:	e015      	b.n	8000632 <GPIO_Init+0x1a2>
 8000606:	2301      	movs	r3, #1
 8000608:	e013      	b.n	8000632 <GPIO_Init+0x1a2>
 800060a:	bf00      	nop
 800060c:	40013c00 	.word	0x40013c00
 8000610:	40020000 	.word	0x40020000
 8000614:	40020400 	.word	0x40020400
 8000618:	40020800 	.word	0x40020800
 800061c:	40020c00 	.word	0x40020c00
 8000620:	40021000 	.word	0x40021000
 8000624:	40021400 	.word	0x40021400
 8000628:	40021800 	.word	0x40021800
 800062c:	40021c00 	.word	0x40021c00
 8000630:	2300      	movs	r3, #0
 8000632:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000634:	4b5e      	ldr	r3, [pc, #376]	@ (80007b0 <GPIO_Init+0x320>)
 8000636:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000638:	4a5d      	ldr	r2, [pc, #372]	@ (80007b0 <GPIO_Init+0x320>)
 800063a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800063e:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode<<(temp2*4);
 8000640:	7c7a      	ldrb	r2, [r7, #17]
 8000642:	7cbb      	ldrb	r3, [r7, #18]
 8000644:	009b      	lsls	r3, r3, #2
 8000646:	fa02 f103 	lsl.w	r1, r2, r3
 800064a:	4a5a      	ldr	r2, [pc, #360]	@ (80007b4 <GPIO_Init+0x324>)
 800064c:	7cfb      	ldrb	r3, [r7, #19]
 800064e:	3302      	adds	r3, #2
 8000650:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		//3. Enable exti interrupt delivery using IMR
		EXTI->IMR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000654:	4b58      	ldr	r3, [pc, #352]	@ (80007b8 <GPIO_Init+0x328>)
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	687a      	ldr	r2, [r7, #4]
 800065a:	7912      	ldrb	r2, [r2, #4]
 800065c:	4611      	mov	r1, r2
 800065e:	2201      	movs	r2, #1
 8000660:	408a      	lsls	r2, r1
 8000662:	4611      	mov	r1, r2
 8000664:	4a54      	ldr	r2, [pc, #336]	@ (80007b8 <GPIO_Init+0x328>)
 8000666:	430b      	orrs	r3, r1
 8000668:	6013      	str	r3, [r2, #0]

	}
	temp = 0;
 800066a:	2300      	movs	r3, #0
 800066c:	617b      	str	r3, [r7, #20]
	//2. CONFIGURE SPEED
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	799b      	ldrb	r3, [r3, #6]
 8000672:	461a      	mov	r2, r3
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	791b      	ldrb	r3, [r3, #4]
 8000678:	005b      	lsls	r3, r3, #1
 800067a:	fa02 f303 	lsl.w	r3, r2, r3
 800067e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	689a      	ldr	r2, [r3, #8]
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	791b      	ldrb	r3, [r3, #4]
 800068a:	4619      	mov	r1, r3
 800068c:	2303      	movs	r3, #3
 800068e:	408b      	lsls	r3, r1
 8000690:	43db      	mvns	r3, r3
 8000692:	4619      	mov	r1, r3
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	400a      	ands	r2, r1
 800069a:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	6899      	ldr	r1, [r3, #8]
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	697a      	ldr	r2, [r7, #20]
 80006a8:	430a      	orrs	r2, r1
 80006aa:	609a      	str	r2, [r3, #8]
	temp = 0;
 80006ac:	2300      	movs	r3, #0
 80006ae:	617b      	str	r3, [r7, #20]
	//3. CONFIGURE PUPD SETTINGS
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinpupdControl << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	79db      	ldrb	r3, [r3, #7]
 80006b4:	461a      	mov	r2, r3
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	791b      	ldrb	r3, [r3, #4]
 80006ba:	005b      	lsls	r3, r3, #1
 80006bc:	fa02 f303 	lsl.w	r3, r2, r3
 80006c0:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	68da      	ldr	r2, [r3, #12]
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	791b      	ldrb	r3, [r3, #4]
 80006cc:	4619      	mov	r1, r3
 80006ce:	2303      	movs	r3, #3
 80006d0:	408b      	lsls	r3, r1
 80006d2:	43db      	mvns	r3, r3
 80006d4:	4619      	mov	r1, r3
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	400a      	ands	r2, r1
 80006dc:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	68d9      	ldr	r1, [r3, #12]
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	697a      	ldr	r2, [r7, #20]
 80006ea:	430a      	orrs	r2, r1
 80006ec:	60da      	str	r2, [r3, #12]
	temp = 0;
 80006ee:	2300      	movs	r3, #0
 80006f0:	617b      	str	r3, [r7, #20]
	//4. CONFIGURE O/P TYPE
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	7a1b      	ldrb	r3, [r3, #8]
 80006f6:	461a      	mov	r2, r3
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	791b      	ldrb	r3, [r3, #4]
 80006fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000700:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	681b      	ldr	r3, [r3, #0]
 8000706:	685a      	ldr	r2, [r3, #4]
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	791b      	ldrb	r3, [r3, #4]
 800070c:	4619      	mov	r1, r3
 800070e:	2303      	movs	r3, #3
 8000710:	408b      	lsls	r3, r1
 8000712:	43db      	mvns	r3, r3
 8000714:	4619      	mov	r1, r3
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	400a      	ands	r2, r1
 800071c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	6859      	ldr	r1, [r3, #4]
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	697a      	ldr	r2, [r7, #20]
 800072a:	430a      	orrs	r2, r1
 800072c:	605a      	str	r2, [r3, #4]
	temp = 0;
 800072e:	2300      	movs	r3, #0
 8000730:	617b      	str	r3, [r7, #20]
	//5. CONFIGURE ALT FUNCTION
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	795b      	ldrb	r3, [r3, #5]
 8000736:	2b02      	cmp	r3, #2
 8000738:	d134      	bne.n	80007a4 <GPIO_Init+0x314>
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	791b      	ldrb	r3, [r3, #4]
 800073e:	08db      	lsrs	r3, r3, #3
 8000740:	743b      	strb	r3, [r7, #16]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	791b      	ldrb	r3, [r3, #4]
 8000746:	f003 0307 	and.w	r3, r3, #7
 800074a:	73fb      	strb	r3, [r7, #15]
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<(4*temp2) );
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	7a5b      	ldrb	r3, [r3, #9]
 8000750:	461a      	mov	r2, r3
 8000752:	7bfb      	ldrb	r3, [r7, #15]
 8000754:	009b      	lsls	r3, r3, #2
 8000756:	fa02 f303 	lsl.w	r3, r2, r3
 800075a:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF <<(4*temp2) );
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	7c3a      	ldrb	r2, [r7, #16]
 8000762:	3208      	adds	r2, #8
 8000764:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000768:	7bfb      	ldrb	r3, [r7, #15]
 800076a:	009b      	lsls	r3, r3, #2
 800076c:	220f      	movs	r2, #15
 800076e:	fa02 f303 	lsl.w	r3, r2, r3
 8000772:	43db      	mvns	r3, r3
 8000774:	4618      	mov	r0, r3
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	681b      	ldr	r3, [r3, #0]
 800077a:	7c3a      	ldrb	r2, [r7, #16]
 800077c:	4001      	ands	r1, r0
 800077e:	3208      	adds	r2, #8
 8000780:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= temp;
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	681b      	ldr	r3, [r3, #0]
 8000788:	7c3a      	ldrb	r2, [r7, #16]
 800078a:	3208      	adds	r2, #8
 800078c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	7c3a      	ldrb	r2, [r7, #16]
 8000796:	6979      	ldr	r1, [r7, #20]
 8000798:	4301      	orrs	r1, r0
 800079a:	3208      	adds	r2, #8
 800079c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		temp = 0;
 80007a0:	2300      	movs	r3, #0
 80007a2:	617b      	str	r3, [r7, #20]
	}

}
 80007a4:	bf00      	nop
 80007a6:	371c      	adds	r7, #28
 80007a8:	46bd      	mov	sp, r7
 80007aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ae:	4770      	bx	lr
 80007b0:	40023800 	.word	0x40023800
 80007b4:	40013800 	.word	0x40013800
 80007b8:	40013c00 	.word	0x40013c00

080007bc <GPIO_ReadFromInputPin>:
}

/*
 * Read and Write
 * */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 80007bc:	b480      	push	{r7}
 80007be:	b085      	sub	sp, #20
 80007c0:	af00      	add	r7, sp, #0
 80007c2:	6078      	str	r0, [r7, #4]
 80007c4:	460b      	mov	r3, r1
 80007c6:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)(pGPIOx->IDR >> PinNumber) & (0x00000001);
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	691a      	ldr	r2, [r3, #16]
 80007cc:	78fb      	ldrb	r3, [r7, #3]
 80007ce:	fa22 f303 	lsr.w	r3, r2, r3
 80007d2:	b2db      	uxtb	r3, r3
 80007d4:	f003 0301 	and.w	r3, r3, #1
 80007d8:	73fb      	strb	r3, [r7, #15]
	return value;
 80007da:	7bfb      	ldrb	r3, [r7, #15]
}
 80007dc:	4618      	mov	r0, r3
 80007de:	3714      	adds	r7, #20
 80007e0:	46bd      	mov	sp, r7
 80007e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e6:	4770      	bx	lr

080007e8 <GPIO_ToggleOutputPin>:
	}
}
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value) {
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 80007e8:	b480      	push	{r7}
 80007ea:	b083      	sub	sp, #12
 80007ec:	af00      	add	r7, sp, #0
 80007ee:	6078      	str	r0, [r7, #4]
 80007f0:	460b      	mov	r3, r1
 80007f2:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= 1<<PinNumber;
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	695b      	ldr	r3, [r3, #20]
 80007f8:	78fa      	ldrb	r2, [r7, #3]
 80007fa:	2101      	movs	r1, #1
 80007fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000800:	405a      	eors	r2, r3
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	615a      	str	r2, [r3, #20]
}
 8000806:	bf00      	nop
 8000808:	370c      	adds	r7, #12
 800080a:	46bd      	mov	sp, r7
 800080c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000810:	4770      	bx	lr
	...

08000814 <__libc_init_array>:
 8000814:	b570      	push	{r4, r5, r6, lr}
 8000816:	4d0d      	ldr	r5, [pc, #52]	@ (800084c <__libc_init_array+0x38>)
 8000818:	4c0d      	ldr	r4, [pc, #52]	@ (8000850 <__libc_init_array+0x3c>)
 800081a:	1b64      	subs	r4, r4, r5
 800081c:	10a4      	asrs	r4, r4, #2
 800081e:	2600      	movs	r6, #0
 8000820:	42a6      	cmp	r6, r4
 8000822:	d109      	bne.n	8000838 <__libc_init_array+0x24>
 8000824:	4d0b      	ldr	r5, [pc, #44]	@ (8000854 <__libc_init_array+0x40>)
 8000826:	4c0c      	ldr	r4, [pc, #48]	@ (8000858 <__libc_init_array+0x44>)
 8000828:	f000 f818 	bl	800085c <_init>
 800082c:	1b64      	subs	r4, r4, r5
 800082e:	10a4      	asrs	r4, r4, #2
 8000830:	2600      	movs	r6, #0
 8000832:	42a6      	cmp	r6, r4
 8000834:	d105      	bne.n	8000842 <__libc_init_array+0x2e>
 8000836:	bd70      	pop	{r4, r5, r6, pc}
 8000838:	f855 3b04 	ldr.w	r3, [r5], #4
 800083c:	4798      	blx	r3
 800083e:	3601      	adds	r6, #1
 8000840:	e7ee      	b.n	8000820 <__libc_init_array+0xc>
 8000842:	f855 3b04 	ldr.w	r3, [r5], #4
 8000846:	4798      	blx	r3
 8000848:	3601      	adds	r6, #1
 800084a:	e7f2      	b.n	8000832 <__libc_init_array+0x1e>
 800084c:	08000874 	.word	0x08000874
 8000850:	08000874 	.word	0x08000874
 8000854:	08000874 	.word	0x08000874
 8000858:	08000878 	.word	0x08000878

0800085c <_init>:
 800085c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800085e:	bf00      	nop
 8000860:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000862:	bc08      	pop	{r3}
 8000864:	469e      	mov	lr, r3
 8000866:	4770      	bx	lr

08000868 <_fini>:
 8000868:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800086a:	bf00      	nop
 800086c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800086e:	bc08      	pop	{r3}
 8000870:	469e      	mov	lr, r3
 8000872:	4770      	bx	lr
